{"version":3,"sources":["../lib/Loggers.js"],"names":[],"mappings":"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","file":"Loggers.js","sourcesContent":["\nconst config = {\n   errorLimit: 30\n};\n\nclass Logger {\n\n   constructor(options) {\n      Object.assign(options, {level: global.loggerLevel});\n      Object.assign(this, options);\n      this.logger = bunyan.createLogger({name: this.name, level: this.level});\n      this.logger.info('create', global.loggerLevel, options);\n   }\n\n   ndebug() {\n   }\n\n   dwarn(...args) {\n      if (global.loggerLevel === 'debug') {\n         this.logger.warn('DEBUG', ...args);\n      }\n   }\n\n   debug(...args) {\n      this.logger.debug(...args);\n   }\n\n   info(...args) {\n      this.logger.info(...args);\n   }\n\n   warn(...args) {\n      this.logger.warn(...args);\n   }\n\n   async error(...args) {\n      this.logger.error(...args);\n      const now = new Date().getTime();\n      if (!this.errorTime || now - this.errorTime > config.errorLimit*1000) {\n         this.errorTime = now;\n         const loggingUrl = global.loggingUrl;\n         if (loggingUrl) {\n            const message = JSON.stringify(this.map(...args));\n            const url = [loggingUrl, 'lpushtrim', message, 100].join('/');\n            try {\n               await Promises.request({url, method: 'head'});\n            } catch (err) {\n               logger.warn('remote', loggingUrl, err);\n            }\n         }\n      }\n   }\n\n   map(...args) {\n      return args.map(arg => {\n         if (arg === undefined) {\n         } else if (arg === null) {\n         } else if (arg === '') {\n         } else if (typeof arg === 'string') {\n         } else if (typeof arg === 'number') {\n         } else if (lodash.isArray(arg)) {\n         } else if (arg.message) {\n            arg = arg.message;\n         } else if (arg.constructor) {\n            if (arg.constructor.name) {\n               arg = '@' + arg.constructor.name;\n            } else {\n               arg = '?object';\n            }\n         } else {\n            arg = '?' + typeof arg;\n         }\n         return arg;\n      });\n   }\n}\n\nexport function create(filename, level) {\n   let name = filename;\n   const nameMatch = filename.match(/([^\\/\\\\]+)\\.[a-z0-9]+/);\n   if (nameMatch) {\n      name = nameMatch[1];\n   }\n   return new Logger({name, level});\n};\n"]}