{"version":3,"sources":["../cryptoserver/Server.js"],"names":[],"mappings":"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","file":"Server.js","sourcesContent":["\nconst fs = require('fs');\nconst async = require('async');\nconst lodash = require('lodash');\nconst express = require('express');\nconst app = express();\nconst https = require('https');\nconst bodyParser = require('body-parser')\nconst concat = require('concat-stream');\nconst bunyan = require('bunyan');\nconst marked = require('marked');\nconst crypto = require('crypto');\n\nconst Crypto = require('./Crypto');\nconst Common = require('./Common');\nconst genKey = require('./genKey');\nconst loadKey = require('./loadKey');\nconst keySecretsStore = require('./keySecretsStore');\nconst keyStore = require('./keyStore');\nconst encryptHandler = require('./encryptHandler');\n\nconst redis = require('redis');\n\nglobal.cryptoserver = exports;\n\nexports.logger = logger;\nexports.redisClient = redis.createClient();\n\nexports.redisClient.on('error', function (err) {\n   logger.error('error', err);\n});\n\nexport async function start() {\n   const env = process.env;\n   validateEnv(env);\n   exports.secretTimeoutSeconds = 120;\n   if (env.Server_secretTimeoutSeconds) {\n      exports.secretTimeoutSeconds = parseInt(env.Server_secretTimeoutSeconds);\n   }\n   keySecretsStore.init({secretTimeoutSeconds: exports.secretTimeoutSeconds});\n   exports.monitorIntervalSeconds = 60;\n   if (env.Server_monitorIntervalSeconds) {\n      exports.monitorIntervalSeconds = parseInt(env.Server_monitorIntervalSeconds);\n   }\n   const options = {\n      ca: fs.readFileSync(env.Server_caCert),\n      key: fs.readFileSync(env.Server_serverKey),\n      cert: fs.readFileSync(env.Server_serverCert),\n      requestCert: true\n   };\n   app.use(appLogger);\n   app.use(authenticate);\n   app.use(authorise);\n   app.get('/help', handleGetHelp);\n   app.get('/genkey/:keyName/:count', handleGetGenKey);\n   app.get('/key/:keyName', handleGetKeyInfo);\n   app.get('/load/:keyName', handleGetLoadKey);\n   app.use(dechunk);\n   app.post('/secret/:keyName', handlePostSecret);\n   app.post('/encrypt/:keyName', handlePostEncrypt);\n   exports.server = https.createServer(options, app).listen(env.Server_port);\n   logger.info('start', env.Server_port, env.NODE_ENV);\n   exports.intervalId = setInterval(monitor, exports.monitorIntervalSeconds * 1000);\n   return exports;\n}\n\nexport async function end() {\n   if (exports.server) {\n      server.close();\n   }\n   if (exports.intervalId) {\n      clearInterval(exports.intervalId);\n   }\n}\n\nfunction dechunk(req, res, next) {\n   req.pipe(concat(function (content) {\n      req.body = content;\n      next();\n   }));\n}\n\nfunction appLogger(req, res, next) {\n   logger.info('app', req.url);\n   next();\n}\n\nfunction authorise(req, res, next) {\n   logger.info('authorise', req.url, req.peerCN);\n   if (req.url === '/help') {\n      next();\n   } else if (!req.peerCN) {\n      throw {message: 'not authorized'};\n   } else {\n      next();\n   }\n}\n\nfunction authenticate(req, res, next) {\n   if (!res.socket.authorized) {\n      if (req.url === '/help') {\n         next();\n      } else {\n         res.redirect('/help');\n      }\n   } else {\n      const cert = req.socket.getPeerCertificate();\n      req.peerCN = cert.subject.CN;\n      logger.info('authenticate', req.url, cert.subject.CN, cert.issuer);\n      next();\n   }\n}\n\nfunction monitor() {\n   logger.debug('monitor');\n   keySecretsStore.monitor();\n}\n\nfunction handleError(res, error) {\n   logger.error('error', error);\n   if (error instanceof Error) {\n      logger.error('error stack', error.stack);\n   }\n   res.status(500).send(error);\n}\n\nfunction handleGet(req, res) {\n   try {\n      throw {message: 'unimplemented: ' + req.url};\n   } catch (error) {\n      handleError(res, error);\n   }\n}\n\nfunction handleGetKeyInfo(req, res) {\n   try {\n      const user = req.peerCN;\n      const keyName = req.params.keyName;\n      const redisKey = 'dek:' + keyName;\n      exports.redisClient.hkeys(redisKey, function (err, reply) {\n         let responseData = {\n            keyName: keyName,\n            reqUrl: req.url\n         };\n         if (err) {\n            responseData = {\n               error: 'error: ' + err,\n            };\n            res.status(500);\n         } else if (reply.length) {\n            responseData.properties = reply;\n         } else {\n            responseData.error = 'empty';\n            res.status(500);\n         }\n         logger.info('reply', redisKey, responseData);\n         res.json(responseData);\n      });\n   } catch (error) {\n      handleError(res, error);\n   }\n}\n\nfunction handleGetGenKey(req, res) {\n   try {\n      const user = req.peerCN;\n      const keyName = req.params.keyName;\n      const redisKey = 'dek:' + keyName;\n      const custodianCount = parseInt(req.params.count);\n      if (custodianCount < 2 || custodianCount > 5) {\n         throw {message: 'invalid custodian count'};\n      }\n      const responseData = {\n         keyName: keyName,\n         custodianCount: custodianCount,\n         reqUrl: req.url\n      };\n      exports.redisClient.hkeys(redisKey, function (err, reply) {\n         logger.info('hkeys', typeof reply, Array.isArray(reply));\n         if (err) {\n            responseData.error = err;\n            res.status(500);\n         } else if (Object.keys(reply).length) {\n            responseData.error = 'already exists';\n            responseData.data = reply;\n            res.status(500);\n         } else {\n            keySecretsStore.put(user, keyName, 'genKey', custodianCount);\n         }\n         logger.info('reply', responseData);\n         res.json(responseData);\n      });\n   } catch (error) {\n      handleError(res, error);\n   }\n}\n\nfunction handleGetLoadKey(req, res) {\n   try {\n      const user = req.peerCN;\n      const keyName = req.params.keyName;\n      const redisKey = 'dek:' + keyName;\n      const responseData = {\n         keyName: keyName,\n         reqUrl: req.url\n      };\n      exports.redisClient.hkeys(redisKey, function (err, reply) {\n         logger.info('hkeys', typeof reply, Array.isArray(reply));\n         if (err) {\n            responseData.error = err;\n            res.status(500);\n         } else if (!Object.keys(reply).length) {\n            responseData.error = 'not found';\n            res.status(500);\n         } else {\n            keySecretsStore.put(user, keyName, 'loadKey');\n         }\n         logger.info('reply', responseData);\n         res.json(responseData);\n      });\n   } catch (error) {\n      handleError(res, error);\n   }\n}\n\nfunction handleGetHelp(req, res) {\n   try {\n      res.set('Content-Type', \"text/html\");\n      fs.readFile('README.md', function (err, content) {\n         if (content) {\n            res.send(marked(content.toString()));\n         } else {\n            res.send('no help');\n         }\n      });\n   } catch (error) {\n      handleError(res, error);\n   }\n}\n\nfunction validateSecretComplexity(secret) {\n   return secret.length >= 12 &&\n           /[A-Z]/.test(secret) &&\n           /[a-z]/.test(secret) &&\n           /\\d/.test(secret) &&\n           /\\W/.test(secret);\n}\n\nfunction performGenKey(user, keyName, keySecrets) {\n   genKey(exports, keySecrets, function (err) {\n      if (err) {\n         logger.error('genKey error', err);\n      } else {\n         logger.info('genKey ok', keyName);\n         keySecretsStore.clear(user, keyName);\n      }\n   });\n}\n\nfunction performLoadKey(user, keyName, keySecrets) {\n   loadKey(exports, keySecrets, function (err, dek) {\n      if (err) {\n         logger.error('loadKey error', err);\n      } else {\n         logger.info('loadKey ok', keyName, dek.length);\n         keySecretsStore.clear(user, keyName);\n         keyStore.put(user, keyName, dek);\n      }\n   });\n}\n\nfunction handlePostSecret(req, res) {\n   try {\n      const user = req.peerCN;\n      const keyName = req.params.keyName;\n      const secret = req.body;\n      const command = 'genKey'; // TODO\n      logger.info('receive secret', user);\n      if (process.env.NODE_ENV === 'production') {\n         if (!validateSecretComplexity(secret)) {\n            if (command === 'genKey') {\n               throw {message: 'insufficient complexity'};\n            }\n         }\n      }\n      const keySecrets = keySecretsStore.setSecret(user, keyName, secret);\n      if (!keySecrets) {\n         throw {message: 'no command'};\n      }\n      const responseData = {\n         keyName: keyName,\n         user: user,\n         custodianCount: keySecrets.custodianCount,\n         secretCount: Object.keys(keySecrets.secrets).length,\n         reqUrl: req.url\n      };\n      logger.info('reply', responseData);\n      res.send(responseData);\n      if (keySecrets.command === 'genKey') {\n         if (Object.keys(keySecrets.secrets).length === keySecrets.custodianCount) {\n            performGenKey(user, keyName, keySecrets);\n         }\n      } else if (keySecrets.command === 'loadKey') {\n         if (Object.keys(keySecrets.secrets).length === 2) {\n            performLoadKey(user, keyName, keySecrets);\n         }\n      }\n   } catch (error) {\n      handleError(res, error);\n   }\n}\n\nfunction handlePostEncrypt(req, res) {\n   try {\n      const keyName = req.params.keyName;\n      const user = req.peerCN;\n      logger.info('receive encrypt', user, keyName);\n      const datum = req.body;\n      const responseData = {\n         keyName: keyName,\n         reqUrl: req.url\n      };\n      throw new Error('not implemented');\n   } catch (error) {\n      handleError(res, error);\n   }\n}\n"]}