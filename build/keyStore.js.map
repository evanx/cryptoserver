{"version":3,"sources":["../cryptoserver/keyStore.js"],"names":[],"mappings":";;AACA,IAAM,SAAS,QAAQ,QAAR,CAAf;;AAEA,IAAM,SAAS,OAAO,YAAP,CAAoB,EAAC,MAAM,uBAAP,EAApB,CAAf;;AAEA,IAAM,WAAW,EAAjB;;AAEA,SAAS,cAAT,GAA0B;AACvB,OAAM,OAAO;AACV,WAAK,aAAU,IAAV,EAAgB,OAAhB,EAAyB,GAAzB,EAA8B;AAChC,gBAAO,IAAP,CAAY,KAAZ,EAAmB,OAAnB;AACA,kBAAS,OAAT,IAAoB;AACjB,uBAAW,IAAI,IAAJ,GAAW,OAAX,EADM;AAEjB,qBAAS,OAFQ;AAGjB,iBAAK;AAHY,UAApB;AAKF,OARS;AASV,WAAK,aAAU,IAAV,EAAgB,OAAhB,EAAyB;AAC3B,gBAAO,SAAS,OAAT,CAAP;AACF,OAXS;AAYV,aAAO,eAAU,IAAV,EAAgB,OAAhB,EAAyB;AAC7B,aAAI,SAAS,cAAT,CAAwB,OAAxB,CAAJ,EAAsC;AACnC,qBAAS,OAAT,IAAoB,SAApB;AACF;AACH;AAhBS,IAAb;AAkBA,UAAO,IAAP;AACF;;AAED,OAAO,OAAP,GAAiB,gBAAjB","file":"keyStore.js","sourcesContent":["\nconst bunyan = require('bunyan');\n\nconst logger = bunyan.createLogger({name: \"cryptoserver.keyStore\"});\n\nconst keyItems = {};\n\nfunction createInstance() {\n   const that = {\n      put: function (user, keyName, key) {\n         logger.info('put', keyName);\n         keyItems[keyName] = {\n            timestamp: new Date().getTime(),\n            keyName: keyName,\n            key: key\n         };\n      },\n      get: function (user, keyName) {\n         return keyItems[keyName];\n      },\n      clear: function (user, keyName) {\n         if (keyItems.hasOwnProperty(keyName)) {\n            keyItems[keyName] = undefined;\n         }\n      }\n   };\n   return that;\n}\n\nmodule.exports = createInstance();\n"]}